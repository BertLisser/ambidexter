program : PROGRAM newident CC59 block CC46 ;

actual_params : CC40 actuals_list CC41 ;
 : ;

var_dcl_part : VAR variable_dcls CC59 ;

member : expression ;
 : expression DOTDOT expression ;

simple_type : constant DOTDOT constant ;
 : ident ;
 : CC40 newident_list CC41 ;

case_label_list : case_label_list CC44 case_label ;
 : case_label ;

type_dcl_part : TYPE type_defs CC59 ;

variable : variable CC94 ;
 : variable CC91 expressions CC93 ;
 : variable CC46 ident ;
 : ident actual_params ;

members : members CC44 member ;
 : member ;

type : struct_type ;
 : simple_type ;
 : PACKED struct_type ;

variant : case_label_list CC58 CC40 field_list CC41 ;
 : ;

member_list : members ;

type_def : newident CC61 type ;

rec_var_list : rec_var_list CC44 record_var ;
 : record_var ;

type_defs : type_defs CC59 type_def ;
 : type_def ;

variants : variants CC59 variant ;
 : variant ;

declaration : var_dcl_part ;
 : type_dcl_part ;
 : proc_dcl_part ;

tag_field : ident ;
 : newident CC58 ident ;

declarations : declarations declaration ;
 : declaration ;

relational_op : CC61 ;

case_list : case_list_elem ;
 : case_list CC59 case_list_elem ;

set : CC91 member_list CC93 ;

simple_expr : CC43 term ;
 : term ;
 : CC45 term ;
 : simple_expr Term_add_op term ;

statement_part : compound_stmt ;

opt_declarations : declarations ;

expression : simple_expr relational_op simple_expr ;
 : simple_expr ;

unsigned_lit : STRING ;
 : unsigned_num ;

record_section : newident_list CC58 type ;
 : ;

ident : IDENTIFIER ;

record_var : variable ;

newident_list : new_id_list ;

procedure_call : ident actual_params ;

variant_part : CASE tag_field OF variants ;

assignment : variable BECOMES expression ;

fixed_part : fixed_part CC59 record_section ;
 : record_section ;

case_label : constant ;

block : opt_declarations statement_part ;

unsigned_num : UNSIGNED_INT ;

newident : IDENTIFIER ;

constant : CC43 ident ;
 : ident ;
 : CC45 ident ;
 : STRING ;
 : CC43 unsigned_num ;
 : unsigned_num ;
 : CC45 unsigned_num ;

body : block ;

case_list_elem : ;
 : case_label_list CC58 statement ;

statement : label CC58 statement ;
 : procedure_call ;
 : ;
 : FOR ident BECOMES expression Term_direction expression DO statement ;
 : assignment ;
 : compound_stmt ;
 : WITH rec_var_list DO statement ;
 : IF expression THEN statement ELSE statement ;
 : CASE expression OF case_list END ;
 : REPEAT statements UNTIL expression ;
 : WHILE expression DO statement ;

field_list : variant_part ;
 : fixed_part ;
 : fixed_part CC59 variant_part ;

proc_or_func : Term_proc_heading Term_proc_heading CC59 body CC59 ;
 : Term_func_heading Term_func_heading CC59 body CC59 ;

statements : statements CC59 statement ;
 : statement ;

factor : variable ;
 : set ;
 : NOT factor ;
 : unsigned_lit ;
 : CC40 expression CC41 ;

index_t_list : simple_type ;
 : index_t_list CC44 simple_type ;

compound_stmt : SBEGIN statements END ;

colon_things : CC58 expression CC58 expression ;
 : CC58 expression ;

new_id_list : newident ;
 : new_id_list CC44 newident ;

expressions : expression ;
 : expressions CC44 expression ;

label : UNSIGNED_INT ;

actual_param : expression colon_things ;
 : expression ;

variable_dcl : newident_list CC58 type ;

actuals_list : actuals_list CC44 actual_param ;
 : actual_param ;

variable_dcls : variable_dcls CC59 variable_dcl ;
 : variable_dcl ;

proc_dcl_part : proc_or_func ;

struct_type : SET OF simple_type ;
 : SFILE OF type ;
 : ARRAY CC91 index_t_list CC93 OF type ;
 : RECORD field_list END ;

term : NOT term ;
 : term Term_mult_op factor ;
 : factor ;

/* terminals */
ELSE : "ELSE" ;
THEN : "THEN" ;
IF : "IF" ;
DOTDOT : "DOTDOT" ;
NOT : "NOT" ;
BECOMES : "BECOMES" ;
IDENTIFIER : "IDENTIFIER" ;
STRING : "STRING" ;
UNSIGNED_INT : "UNSIGNED_INT" ;
CC58 : ":" ;
CC41 : ")" ;
CC40 : "(" ;
CC45 : "-" ;
CC43 : "+" ;
CC46 : "." ;
CC59 : ";" ;
Term_mult_op : "Term_mult_op" ;
PROGRAM : "PROGRAM" ;
CC61 : "=" ;
PACKED : "PACKED" ;
SFILE : "SFILE" ;
SET : "SET" ;
Term_proc_heading : "Term_proc_heading" ;
RECORD : "RECORD" ;
Term_func_heading : "Term_func_heading" ;
CC93 : "]" ;
ARRAY : "ARRAY" ;
TYPE : "TYPE" ;
VAR : "VAR" ;
Term_add_op : "Term_add_op" ;
CC91 : "[" ;
Term_direction : "Term_direction" ;
WITH : "WITH" ;
END : "END" ;
SBEGIN : "SBEGIN" ;
Term_external_files : "Term_external_files" ;
CC44 : "," ;
FOR : "FOR" ;
DO : "DO" ;
CC94 : "^" ;
WHILE : "WHILE" ;
UNTIL : "UNTIL" ;
REPEAT : "REPEAT" ;
OF : "OF" ;
CASE : "CASE" ;
