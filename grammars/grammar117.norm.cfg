
program :  PROGRAM newident external_files ";" block "."


variable_dcls :  variable_dcls ";" variable_dcl
|  variable_dcl


proc_dcl_part :  proc_or_func


actual_params : 
|  "(" actuals_list ")"


var_dcl_part :  VAR variable_dcls ";"


member :  expression
|  expression DOTDOT expression


variable :  variable "." ident
|  ident actual_params
|  variable "^"
|  variable "[" expressions "]"


case_label_list :  case_label_list "," case_label
|  case_label


type_dcl_part :  TYPE type_defs ";"


members :  members "," member
|  member


const_dcl_part :  CONST const_defs ";"


variant : 
|  case_label_list ":" "(" field_list ")"


rec_var_list :  rec_var_list "," record_var
|  record_var


label_dcl_part :  LABEL labels ";"


member_list :  members
| 


direction :  DOWNTO
|  TO


variants :  variants ";" variant
|  variant


declaration :  var_dcl_part
|  type_dcl_part
|  const_dcl_part
|  label_dcl_part
|  proc_dcl_part


tag_field :  ident
|  newident ":" ident


declarations :  declarations declaration
|  declaration


case_list :  case_list ";" case_list_elem
|  case_list_elem


set :  "[" member_list "]"


statement_part :  compound_stmt


expression :  simple_expr
|  simple_expr relational_op simple_expr


opt_declarations : 
|  declarations


unsigned_lit :  STRING
|  unsigned_num
|  NIL


record_section :  newident_list ":" type
| 


newident_list :  new_id_list


procedure_call :  ident actual_params


variant_part :  CASE tag_field OF variants


assignment :  variable BECOMES expression


fixed_part :  fixed_part ";" record_section
|  record_section


block :  opt_declarations statement_part


external_files : 
|  "(" newident_list ")"


newident :  IDENTIFIER


mult_op :  "/"
|  AND
|  "*"
|  MOD
|  DIV


statement :  GOTO label
|  WITH rec_var_list DO statement
|  procedure_call
|  label ":" statement
|  assignment
|  IF expression THEN statement ELSE statement
|  compound_stmt
|  FOR ident BECOMES expression direction expression DO statement
|  REPEAT statements UNTIL expression
|  WHILE expression DO statement
|  IF expression THEN statement
| 
|  CASE expression OF case_list END


field_list :  variant_part
|  fixed_part
|  fixed_part ";" variant_part


factor :  "(" expression ")"
|  NOT factor
|  variable
|  set
|  unsigned_lit


statements :  statements ";" statement
|  statement


index_t_list :  simple_type
|  index_t_list "," simple_type


compound_stmt :  SBEGIN statements END


add_op :  "-"
|  "+"
|  OR


index_spec :  newident DOTDOT newident ":" ident


index_specs :  index_specs ";" index_spec
|  index_spec


term :  term mult_op factor
|  factor


struct_type :  ARRAY "[" index_t_list "]" OF type
|  SET OF simple_type
|  SFILE OF type
|  RECORD field_list END


paramtype :  ident
|  PACKED ARRAY "[" index_spec "]" OF ident
|  ARRAY "[" index_specs "]" OF paramtype


simple_type :  constant DOTDOT constant
|  ident
|  "(" newident_list ")"


type :  "^" IDENTIFIER
|  struct_type
|  PACKED struct_type
|  simple_type


type_def :  newident "=" type


param_group :  newident_list ":" paramtype


type_defs :  type_defs ";" type_def
|  type_def


formal_p_sect :  VAR param_group
|  func_heading
|  proc_heading
|  param_group


relational_op :  IN
|  "="
|  ">"
|  "<"
|  GE
|  LE
|  NE


formal_p_sects :  formal_p_sects ";" formal_p_sect
|  formal_p_sect


simple_expr :  "+" term
|  "-" term
|  simple_expr add_op term
|  term


record_var :  variable


ident :  IDENTIFIER


case_label :  constant


function_form :  formal_params ":" ident
| 


formal_params :  "(" formal_p_sects ")"
| 


unsigned_num :  UNSIGNED_REAL
|  UNSIGNED_INT


func_heading :  FUNCTION newident function_form


constant :  ident
|  "+" unsigned_num
|  "-" unsigned_num
|  STRING
|  "+" ident
|  unsigned_num
|  "-" ident


body :  IDENTIFIER
|  block


case_list_elem : 
|  case_label_list ":" statement


proc_heading :  PROCEDURE newident formal_params


const_def :  newident "=" constant


proc_or_func :  proc_heading ";" body ";"
|  func_heading ";" body ";"


colon_things :  ":" expression
|  ":" expression ":" expression


const_defs :  const_defs ";" const_def
|  const_def


new_id_list :  newident
|  new_id_list "," newident


actual_param :  expression
|  expression colon_things


expressions :  expression
|  expressions "," expression


label :  UNSIGNED_INT


actuals_list :  actual_param
|  actuals_list "," actual_param


variable_dcl :  newident_list ":" type


labels :  label
|  labels "," label


/* terminals */
WHILE : "!"
UNTIL : "#"
REPEAT : "$"
OF : "%"
CASE : "&"
ELSE : "'"
THEN : "0"
IF : "1"
DOTDOT : "2"
NOT : "3"
AND : "4"
OR : "5"
IN : "6"
NIL : "7"
MOD : "8"
DIV : "9"
BECOMES : "?"
GE : "@"
LE : "A"
NE : "B"
IDENTIFIER : "C"
STRING : "D"
UNSIGNED_REAL : "E"
UNSIGNED_INT : "F"
PROGRAM : "G"
PACKED : "H"
LABEL : "I"
PROCEDURE : "J"
FUNCTION : "K"
SFILE : "L"
SET : "M"
RECORD : "N"
ARRAY : "O"
TYPE : "P"
VAR : "Q"
CONST : "R"
GOTO : "S"
WITH : "T"
END : "U"
SBEGIN : "V"
DOWNTO : "W"
TO : "X"
FOR : "Y"
DO : "Z"
