program : PROGRAM newident external_files CC59 block CC46 ;

fixed_part : record_section ;
 : fixed_part CC59 record_section ;

compound_stmt : SBEGIN statements END ;

expressions : expression ;
 : expressions CC44 expression ;

actual_params : ;
 : CC40 actuals_list CC41 ;

formal_params : ;
 : CC40 formal_p_sects CC41 ;

newident : IDENTIFIER ;

factor : unsigned_lit ;
 : variable ;
 : CC40 expression CC41 ;
 : set ;
 : NOT factor ;

param_group : newident_list CC58 paramtype ;

case_list : case_list CC59 case_list_elem ;
 : case_list_elem ;

unsigned_lit : unsigned_num ;
 : STRING ;

assignment : variable BECOMES expression ;

function_form : ;
 : formal_params CC58 ident ;

procedure_call : ident actual_params ;

paramtype : PACKED ARRAY CC91 index_spec CC93 OF ident ;
 : ARRAY CC91 index_specs CC93 OF paramtype ;
 : ident ;

opt_declarations : ;
 : declarations ;

field_list : fixed_part ;
 : variant_part ;
 : fixed_part CC59 variant_part ;

statement_part : compound_stmt ;

case_list_elem : ;
 : case_label_list CC58 statement ;

var_dcl_part : VAR variable_dcls CC59 ;

unsigned_num : UNSIGNED_INT ;

type : simple_type ;
 : struct_type ;
 : PACKED struct_type ;

declarations : declarations declaration ;
 : declaration ;

record_var : variable ;

proc_or_func : func_heading CC59 body CC59 ;
 : proc_heading CC59 body CC59 ;

formal_p_sects : formal_p_sects CC59 formal_p_sect ;
 : formal_p_sect ;

newident_list : new_id_list ;

variable_dcls : variable_dcls CC59 variable_dcl ;
 : variable_dcl ;

const_def : newident CC61 constant ;

simple_type : ident ;
 : CC40 newident_list CC41 ;
 : constant DOTDOT constant ;

case_label : constant ;

colon_things : CC58 expression CC58 expression ;
 : CC58 expression ;

constant : CC45 ident ;
 : STRING ;
 : CC43 ident ;
 : ident ;
 : CC45 unsigned_num ;
 : CC43 unsigned_num ;
 : unsigned_num ;

new_id_list : new_id_list CC44 newident ;
 : newident ;

member_list : members ;
 : ;

body : block ;
 : IDENTIFIER ;

actual_param : expression ;
 : expression colon_things ;

member : expression ;
 : expression DOTDOT expression ;

members : members CC44 member ;
 : member ;

proc_heading : PROCEDURE newident formal_params ;

expression : simple_expr ;
 : simple_expr relational_op simple_expr ;

index_t_list : index_t_list CC44 simple_type ;
 : simple_type ;

tag_field : ident ;
 : newident CC58 ident ;

label_dcl_part : LABEL labels CC59 ;

variants : variant ;
 : variants CC59 variant ;

block : opt_declarations statement_part ;

variable_dcl : newident_list CC58 type ;

type_dcl_part : TYPE type_defs CC59 ;

index_spec : newident DOTDOT newident CC58 ident ;

func_heading : FUNCTION newident function_form ;

variant : ;
 : case_label_list CC58 CC40 field_list CC41 ;

rec_var_list : rec_var_list CC44 record_var ;
 : record_var ;

external_files : ;

formal_p_sect : param_group ;
 : proc_heading ;
 : VAR param_group ;
 : func_heading ;

const_dcl_part : CONST const_defs CC59 ;

type_def : newident CC61 type ;

labels : label ;
 : labels CC44 label ;

variable : ident actual_params ;
 : variable CC94 ;
 : variable CC91 expressions CC93 ;
 : variable CC46 ident ;

declaration : const_dcl_part ;
 : label_dcl_part ;
 : proc_dcl_part ;
 : var_dcl_part ;
 : type_dcl_part ;

relational_op : CC61 ;

case_label_list : case_label ;
 : case_label_list CC44 case_label ;

actuals_list : actuals_list CC44 actual_param ;
 : actual_param ;

record_section : newident_list CC58 type ;
 : ;

label : UNSIGNED_INT ;

type_defs : type_def ;
 : type_defs CC59 type_def ;

ident : IDENTIFIER ;

statement : WHILE expression DO statement ;
 : CASE expression OF case_list END ;
 : assignment ;
 : compound_stmt ;
 : procedure_call ;
 : WITH rec_var_list DO statement ;
 : IF expression THEN statement ELSE statement ;
 : FOR ident BECOMES expression Term_direction expression DO statement ;
 : REPEAT statements UNTIL expression ;
 : ;
 : label CC58 statement ;

proc_dcl_part : proc_or_func ;

variant_part : CASE tag_field OF variants ;

term : factor ;
 : term Term_mult_op factor ;

index_specs : index_spec ;
 : index_specs CC59 index_spec ;

const_defs : const_def ;
 : const_defs CC59 const_def ;

statements : statements CC59 statement ;
 : statement ;

struct_type : SFILE OF type ;
 : SET OF simple_type ;
 : ARRAY CC91 index_t_list CC93 OF type ;
 : RECORD field_list END ;

simple_expr : CC45 term ;
 : CC43 term ;
 : term ;
 : simple_expr Term_add_op term ;

set : CC91 member_list CC93 ;

/* terminals */
DOTDOT : "DOTDOT" ;
CC46 : "." ;
IF : "IF" ;
THEN : "THEN" ;
Term_mult_op : "Term_mult_op" ;
REPEAT : "REPEAT" ;
FUNCTION : "FUNCTION" ;
OF : "OF" ;
SBEGIN : "SBEGIN" ;
CC58 : ":" ;
LABEL : "LABEL" ;
CC91 : "[" ;
Term_add_op : "Term_add_op" ;
CC93 : "]" ;
WHILE : "WHILE" ;
STRING : "STRING" ;
RECORD : "RECORD" ;
SFILE : "SFILE" ;
Term_direction : "Term_direction" ;
DO : "DO" ;
VAR : "VAR" ;
WITH : "WITH" ;
CC41 : ")" ;
UNSIGNED_INT : "UNSIGNED_INT" ;
CC43 : "+" ;
CONST : "CONST" ;
SET : "SET" ;
CC45 : "-" ;
UNTIL : "UNTIL" ;
END : "END" ;
TYPE : "TYPE" ;
ARRAY : "ARRAY" ;
ELSE : "ELSE" ;
PACKED : "PACKED" ;
PROCEDURE : "PROCEDURE" ;
NOT : "NOT" ;
CC59 : ";" ;
CC61 : "=" ;
CASE : "CASE" ;
CC94 : "^" ;
BECOMES : "BECOMES" ;
IDENTIFIER : "IDENTIFIER" ;
FOR : "FOR" ;
CC40 : "(" ;
PROGRAM : "PROGRAM" ;
CC44 : "," ;
