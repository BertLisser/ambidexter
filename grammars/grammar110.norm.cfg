
program :  PROGRAM newident external_files ";" block "."


add_op :  "-"
|  "+"
|  OR


index_spec :  newident DOTDOT newident ":" ident


index_specs :  index_specs ";" index_spec
|  index_spec


struct_type :  SET OF simple_type
|  SFILE OF type
|  RECORD field_list END
|  ARRAY "[" index_t_list "]" OF type


term :  term mult_op factor
|  factor


paramtype :  ident
|  ARRAY "[" index_specs "]" OF paramtype
|  PACKED ARRAY "[" index_spec "]" OF ident


simple_type :  constant DOTDOT constant
|  ident
|  "(" newident_list ")"


type :  "^" IDENTIFIER
|  PACKED struct_type
|  struct_type
|  simple_type


type_def :  newident "=" type


param_group :  newident_list ":" paramtype


type_defs :  type_defs ";" type_def
|  type_def


formal_p_sect :  func_heading
|  proc_heading
|  param_group
|  VAR param_group


formal_p_sects :  formal_p_sects ";" formal_p_sect
|  formal_p_sect


relational_op :  IN
|  "="
|  ">"
|  GE
|  LE
|  "<"
|  NE


simple_expr :  simple_expr add_op term
|  term
|  "+" term
|  "-" term


record_var :  variable


ident :  IDENTIFIER


function_form : 
|  formal_params ":" ident


case_label :  constant


formal_params : 
|  "(" formal_p_sects ")"


unsigned_num :  UNSIGNED_REAL
|  UNSIGNED_INT


func_heading :  FUNCTION newident function_form


constant :  "-" unsigned_num
|  ident
|  "+" ident
|  STRING
|  "-" ident
|  unsigned_num
|  "+" unsigned_num


body :  IDENTIFIER
|  block


proc_heading :  PROCEDURE newident formal_params


case_list_elem : 
|  case_label_list ":" statement


const_def :  newident "=" constant


proc_or_func :  proc_heading ";" body ";"
|  func_heading ";" body ";"


const_defs :  const_defs ";" const_def
|  const_def


colon_things :  ":" expression
|  ":" expression ":" expression


new_id_list :  newident
|  new_id_list "," newident


label :  UNSIGNED_INT


actual_param :  expression colon_things
|  expression


expressions :  expression
|  expressions "," expression


variable_dcl :  newident_list ":" type


labels :  label
|  labels "," label


actuals_list :  actuals_list "," actual_param
|  actual_param


variable_dcls :  variable_dcls ";" variable_dcl
|  variable_dcl


proc_dcl_part :  proc_or_func


var_dcl_part :  VAR variable_dcls ";"


actual_params : 
|  "(" actuals_list ")"


case_label_list :  case_label_list "," case_label
|  case_label


type_dcl_part :  TYPE type_defs ";"


member :  expression
|  expression DOTDOT expression


variable :  variable "[" expressions "]"
|  ident actual_params
|  variable "^"
|  variable "." ident


const_dcl_part :  CONST const_defs ";"


members :  members "," member
|  member


variant :  case_label_list ":" "(" field_list ")"
| 


label_dcl_part :  LABEL labels ";"


rec_var_list :  rec_var_list "," record_var
|  record_var


member_list : 
|  members


direction :  DOWNTO
|  TO


variants :  variants ";" variant
|  variant


declaration :  var_dcl_part
|  type_dcl_part
|  const_dcl_part
|  label_dcl_part
|  proc_dcl_part


tag_field :  ident
|  newident ":" ident


declarations :  declaration
|  declarations declaration


case_list :  case_list_elem
|  case_list ";" case_list_elem


statement_part :  compound_stmt


set :  "[" member_list "]"


expression :  simple_expr relational_op simple_expr
|  simple_expr


opt_declarations :  declarations
| 


record_section :  newident_list ":" type
| 


newident_list :  new_id_list


unsigned_lit :  STRING
|  unsigned_num
|  NIL


procedure_call :  ident actual_params


variant_part :  CASE tag_field OF variants


assignment :  variable BECOMES expression


fixed_part :  fixed_part ";" record_section
|  record_section


block :  opt_declarations statement_part


external_files :  "(" newident_list ")"
| 


newident :  IDENTIFIER


statement :  IF expression THEN statement ELSE statement
|  procedure_call
|  label ":" statement
|  REPEAT statements UNTIL expression
|  WHILE expression DO statement
|  assignment
|  compound_stmt
| 
|  GOTO label
|  CASE expression OF case_list END
|  WITH rec_var_list DO statement
|  FOR ident BECOMES expression direction expression DO statement


field_list :  variant_part
|  fixed_part
|  fixed_part ";" variant_part


mult_op :  AND
|  "/"
|  MOD
|  "*"
|  DIV


statements :  statements ";" statement
|  statement


factor :  variable
|  set
|  unsigned_lit
|  NOT factor
|  "(" expression ")"


index_t_list :  simple_type
|  index_t_list "," simple_type


compound_stmt :  SBEGIN statements END


/* terminals */
SBEGIN : "!"
DOWNTO : "#"
TO : "$"
FOR : "%"
DO : "&"
WHILE : "'"
UNTIL : "0"
REPEAT : "1"
OF : "2"
CASE : "3"
ELSE : "4"
THEN : "5"
IF : "6"
DOTDOT : "7"
NOT : "8"
AND : "9"
OR : "?"
IN : "@"
NIL : "A"
MOD : "B"
DIV : "C"
BECOMES : "D"
GE : "E"
LE : "F"
NE : "G"
IDENTIFIER : "H"
STRING : "I"
UNSIGNED_REAL : "J"
UNSIGNED_INT : "K"
PROGRAM : "L"
PACKED : "M"
LABEL : "N"
PROCEDURE : "O"
FUNCTION : "P"
SFILE : "Q"
SET : "R"
RECORD : "S"
ARRAY : "T"
TYPE : "U"
VAR : "V"
CONST : "W"
GOTO : "X"
WITH : "Y"
END : "Z"
