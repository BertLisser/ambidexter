%%
%% SimpleTypeSpecifiers.sdf:
%% this file is a part of CxxGrammar from the Transformers project.
%% Copyright (C) 2004 EPITA Research and Development Laboratory.
%%
%% This program is free software; you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or
%% (at your option) any later version.
%%
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with this program; if not, write to the Free Software
%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
%%
module SimpleTypeSpecifiers

imports

  ClassSpecifiers
  EnumSpecifiers
  IdExpressions
  Identifiers
  TemplateIds

exports

  sorts
    TypeName
    TypedefName
    SimpleTypeSpecifier

  context-free syntax

    %% 7.1.5.2 [dcl.type.simple]
    r:Root nns:NestedNameSpecifier? TypeName         -> SimpleTypeSpecifier

    r:Root NestedNameSpecifier "template" TemplateId -> SimpleTypeSpecifier

    "char"                                        -> SimpleTypeSpecifier

    "wchar_t"                                     -> SimpleTypeSpecifier

    "bool"                                        -> SimpleTypeSpecifier

    "short"                                       -> SimpleTypeSpecifier

    "int"                                         -> SimpleTypeSpecifier

    "long"                                        -> SimpleTypeSpecifier

    "signed"                                      -> SimpleTypeSpecifier

    "unsigned"                                    -> SimpleTypeSpecifier

    "float"                                       -> SimpleTypeSpecifier

    "double"                                      -> SimpleTypeSpecifier

    "void"                                        -> SimpleTypeSpecifier


    %% 7.1.5.2 [dcl.type.simple]
    ClassName   -> TypeName

    EnumName    -> TypeName

    TypedefName -> TypeName


    %% A.1 [gram.key]
    Identifier -> TypedefName
