%%
%% IdExpressions.sdf:
%% this file is a part of CxxGrammar from the Transformers project.
%% Copyright (C) 2004, 2005 EPITA Research and Development Laboratory.
%%
%% This program is free software; you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or
%% (at your option) any later version.
%%
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with this program; if not, write to the Free Software
%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
%%
module IdExpressions

imports

  ClassSpecifiers
  ConversionFunctionIds
  Identifiers
  Keywords
  Namespaces
  OperatorFunctionIds
  TemplateIds

exports

  sorts
    ClassOrNamespaceName
    IdExpression
    QualifiedId
    NestedNameSpecifier
    UnqualifiedId
    Root

  context-free syntax

    %% 5.1 [expr.prim]
    UnqualifiedId -> IdExpression

    QualifiedId   -> IdExpression

    %% 5.1 [expr.prim]
    Identifier           -> UnqualifiedId

    OperatorFunctionId   -> UnqualifiedId

    ConversionFunctionId -> UnqualifiedId

    "~" ClassName        -> UnqualifiedId

    TemplateId           -> UnqualifiedId

    %% 5.1 [expr.prim]
    r:Root NestedNameSpecifier template:"template"? UnqualifiedId
                                                             -> QualifiedId

    "::" -> Root

         -> Root

    "::" Identifier                                          -> QualifiedId
    "::" OperatorFunctionId                                  -> QualifiedId
    "::" TemplateId                                          -> QualifiedId

    %% 5.1 [expr.prim]
    ClassOrNamespaceName "::" nns:NestedNameSpecifier? -> NestedNameSpecifier
    ClassOrNamespaceName "::" "template" NestedNameSpecifier
                                                       -> NestedNameSpecifier

    %% 5.1 [expr.prim]
    ClassName     -> ClassOrNamespaceName
    NamespaceName -> ClassOrNamespaceName
