%%
%% TypeIds.sdf:
%% this file is a part of CxxGrammar from the Transformers project.
%% Copyright (C) 2004 EPITA Research and Development Laboratory.
%%
%% This program is free software; you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or
%% (at your option) any later version.
%%
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with this program; if not, write to the Free Software
%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
%%
module TypeIds

imports

  ConstantExpressions
  CvQualifiers
  ExceptionSpecifications
  ParameterDeclarations
  TypeSpecifiers

exports

  sorts
    DirectAbstractDeclarator

exports

  sorts
    AbstractDeclarator
    TypeSpecifierSeq
    TypeId

  context-free syntax

    %% 8.1 [dcl.name]
    TypeSpecifierSeq ad:AbstractDeclarator? -> TypeId

    %% 8.1 [dcl.name]
    ts:TypeSpecifier+ -> TypeSpecifierSeq

    l:TypeSpecifier+ r:TypeSpecifier+ -> TypeSpecifier+
        {left}

    %%FIXME
    TypeSpecifier+ TypeSpecifier* -> TypeSpecifier+
      {avoid}
    TypeSpecifier* TypeSpecifier+ -> TypeSpecifier+
      {avoid}

    TypeSpecifier -> TypeSpecifier+

    %% 8.1 [dcl.name]
    PtrOperator ad:AbstractDeclarator? -> AbstractDeclarator

    ad:AbstractDeclarator -> AbstractDeclarator?

                          -> AbstractDeclarator?

    DirectAbstractDeclarator        -> AbstractDeclarator


    DirectAbstractDeclarator -> DirectAbstractDeclarator?
                             -> DirectAbstractDeclarator?

    %% 8.1 [dcl.name]
    dad:DirectAbstractDeclarator? "(" ParameterDeclarationClause ")"
    cqs:CvQualifierSeq? es:ExceptionSpecification? -> DirectAbstractDeclarator

    ExceptionSpecification -> ExceptionSpecification?
                           -> ExceptionSpecification?

    dad:DirectAbstractDeclarator? "[" ce:ConstantExpression? "]"
                                                   -> DirectAbstractDeclarator

    "(" AbstractDeclarator ")"                     -> DirectAbstractDeclarator

  lexical restrictions
    "+" -/- [\+]
    "-" -/- [\-]
