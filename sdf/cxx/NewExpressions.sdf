%%
%% NewExpressions.sdf:
%% this file is a part of CxxGrammar from the Transformers project.
%% Copyright (C) 2004 EPITA Research and Development Laboratory.
%%
%% This program is free software; you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation; either version 2 of the License, or
%% (at your option) any later version.
%%
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with this program; if not, write to the Free Software
%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
%%
module NewExpressions

imports

  Expressions
  PostfixExpressions
  TypeIds

exports

  sorts
    NewPlacement
    NewTypeId
    NewDeclarator
    DirectNewDeclarator
    NewInitializer

exports

  sorts
    NewExpression

  context-free syntax

    %% 5.3.4 [expr.new]
    root:"::"? "new" np:NewPlacement? NewTypeId ni:NewInitializer?
                                                         -> NewExpression

    root:"::"? "new" np:NewPlacement? "(" TypeId ")" ni:NewInitializer?
                                                         -> NewExpression

    %% 5.3.4 [expr.new]
    "(" ExpressionList ")" -> NewPlacement

    %% 5.3.4 [expr.new]
    TypeSpecifierSeq nd:NewDeclarator? -> NewTypeId

    %% 5.3.4 [expr.new]
    PtrOperator nd:NewDeclarator? -> NewDeclarator

    DirectNewDeclarator           -> NewDeclarator

    %% 5.3.4 [expr.new]
    "[" Expression "]"                             -> DirectNewDeclarator

    DirectNewDeclarator "[" ConstantExpression "]" -> DirectNewDeclarator

    %% 5.3.4 [expr.new]
    "(" el:ExpressionList? ")" -> NewInitializer
